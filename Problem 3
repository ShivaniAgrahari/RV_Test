def is_palindrome(string):
    """Check if a string is a palindrome."""
    cleaned_string = ''.join(char.lower() for char in string if char.isalnum())
    return cleaned_string == cleaned_string[::-1]

def find_palindromic_substrings(input_str):
    """Find palindromic substrings of length three or more."""
    substrings = []
    n = len(input_str)
    for i in range(n):
        for j in range(i + 2, n):
            substring = input_str[i:j + 1]
            if len(substring) >= 3 and is_palindrome(substring):
                substrings.append((i + 1, substring))
    return substrings

# Input number of strings to be analyzed
num_strings = int(input())

# Process each string separately
for _ in range(num_strings):
    string_length = int(input())
    input_str = input()
    
    # Print the original string
    print(input_str)
    
    # Find and print palindromic substrings
    palindromic_substrings = find_palindromic_substrings(input_str)
    palindromic_substrings.sort(key=lambda x: (x[0], len(x[1]), x[1]))
    for position, substring in palindromic_substrings:
        print(position, substring)

    print()  # Print a blank line after each string's output
